/*
drop table genre cascade;
drop table movie cascade;
drop table movieUser cascade;
drop table review cascade;
drop table movie_ganre cascade;
drop table country cascade;
drop table movie_country cascade;
*/

create table if not exists genre (
id serial primary key,
name varchar(100) not null UNIQUE
);


create table if not EXISTS movie  (
id SERIAL primary key,
name VARCHAR (100) not null UNIQUE,
originalName varchar(100),
releaseYear INTEGER not null,
countries varchar(100), --Not on git
description varchar(10000),
rating real,
price real,
created_date timestamp default current_timestamp not null,
last_update_date timestamp default current_timestamp not null,
is_deleted BOOLEAN DEFAULT FALSE not null,
to_be_deleted BOOLEAN DEFAULT FALSE not null
);


create table if not exists movieUser (
id serial primary key,
name varchar(100) not null,
email varchar(100) not null UNIQUE,
pass varchar(100) not null,
is_admin boolean default false not null,
created_date timestamp default current_timestamp not null,
last_update_date timestamp default current_timestamp not null,
is_deleted BOOLEAN DEFAULT FALSE not null
);


create table if not exists review (
id serial primary key,
movieuser_id integer references movieuser(id),
movieId integer references movie(id),
description varchar(10000),
created_date timestamp default current_timestamp not null,
last_update_date timestamp default current_timestamp not null,
is_deleted BOOLEAN DEFAULT FALSE not null
);


create table if not exists movie_ganre (
movieId integer references movie(id),
genre_id integer references genre(id),
UNIQUE(movieId, genre_id)
);

create table if not exists country (
id serial primary key,
name varchar(100) not null UNIQUE
);

create table if not exists movie_country (
movieId integer references movie(id),
country_id integer references country(id),
UNIQUE(movieId, country_id)
);


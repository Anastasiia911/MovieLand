<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config></context:annotation-config>

    <context:component-scan base-package="com.nabivach">
    <context:exclude-filter type="regex" expression="com\.nabivach\.movieland\.controller\..*"/>
    </context:component-scan>

    <!--DAO BEAN-->

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/movieland"/>
        <property name="username" value="postgres"/>
        <property name="password" value="root"/>
        <property name="initialSize" value="20"/>
        <property name="maxTotal" value="60"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- QUERY BEANS STRING CLASS-->

    <bean id="getAllMoviesSQL" class="java.lang.String">
        <constructor-arg value="select id, name, original_name, release_year, RATING from movie"/>
    </bean>

    <bean id="getCountryForMovieSQL" class="java.lang.String">
        <constructor-arg value="select c.* from movie_country mc join country c on mc.country_id = c.id where mc.movie_id = ?"/>
    </bean>

    <bean id="getGenresForMovieSQL" class="java.lang.String">
        <constructor-arg value="select g.* from movie_ganre mg join genre g on mg.genre_id = g.id where mg.movie_id = ?"/>
    </bean>

    <bean id="getReviewForMovieSQL" class="java.lang.String">
        <constructor-arg value="select rv.* from review rv where rv.movie_id = ? limit ?"/>
    </bean>

          <!-- JSON CONVERTER-->

    <bean id="jsonConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes" value="application/json"/>
        <property name="prettyPrint" value="true" />
    </bean>

    <!-- REST template configuration -->
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate"/>

</beans>